// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  email     String?
  otp       String?
  token     String?
  status    Boolean  @default(false)
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Barang {
  id            String         @id @default(uuid())
  kodeBarang    String
  namaBarang    String
  nomorRegister String
  merkType      String
  ukuran        String
  qty           Int
  tahun         Int
  hargaBarang   Float
  kondisi       String
  jenis         String
  foto          String?
  perolehan     String
  imageBarcode  String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  barangKeluar  BarangKeluar[]
  permintaan    Permintaan[]
  inventaris    Inventaris[]
}

model Ruangan {
  id   Int    @id @default(autoincrement())
  nama String

  permintaan Permintaan[]
  inventaris Inventaris[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Permintaan {
  id        Int      @id @default(autoincrement())
  qty       Int
  status    Boolean?
  barangId  String
  barang    Barang   @relation(fields: [barangId], references: [id])
  ruanganId Int
  ruangan   Ruangan  @relation(fields: [ruanganId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BarangKeluar {
  id         Int      @id @default(autoincrement())
  barangId    String
  qty        Int
  tanggal    DateTime @default(now())
  keterangan String?

  barang Barang @relation(fields: [barangId], references: [id])
}

model Inventaris {
  id        Int      @id @default(autoincrement())
  qty       Int
  barangId  String
  barang    Barang   @relation(fields: [barangId], references: [id])
  ruanganId Int
  ruangan   Ruangan  @relation(fields: [ruanganId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([barangId, ruanganId])
}
